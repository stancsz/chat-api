name: Deploy AWS Lambda

on:
  push:
    branches:
      - main  # Triggers the workflow on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify the Python version

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt -t src/

      # Step 4: Package the Lambda function
      - name: Package Lambda Function
        run: |
          cd src
          zip -r ../lambda_package.zip . -x "*.git*"

      # Step 5: Verify ZIP contents (Optional but recommended)
      - name: Verify ZIP Contents
        run: unzip -l lambda_package.zip

      # Step 6: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your desired region

      # Step 7: Deploy to AWS Lambda
      - name: Deploy to AWS Lambda
        env:
          LAMBDA_FUNCTION_NAME: chat-api
          LAMBDA_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/lambda-execution-role
          VERIFY_TOKEN: ${{ secrets.VERIFY_TOKEN }}
          PAGE_ACCESS_TOKEN: ${{ secrets.PAGE_ACCESS_TOKEN }}
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status

          # Check if the Lambda function exists
          if aws lambda get-function --function-name "$LAMBDA_FUNCTION_NAME" > /dev/null 2>&1; then
            echo "Updating existing Lambda function: $LAMBDA_FUNCTION_NAME"
            aws lambda update-function-code \
              --function-name "$LAMBDA_FUNCTION_NAME" \
              --zip-file fileb://lambda_package.zip

            # Wait for the code update to complete
            echo "Waiting for function update to complete..."
            sleep 20  # Wait 20 seconds (adjust if necessary)

            aws lambda update-function-configuration \
              --function-name "$LAMBDA_FUNCTION_NAME" \
              --environment Variables="{VERIFY_TOKEN=\"$VERIFY_TOKEN\",PAGE_ACCESS_TOKEN=\"$PAGE_ACCESS_TOKEN\"}"
          else
            echo "Creating new Lambda function: $LAMBDA_FUNCTION_NAME"
            aws lambda create-function \
              --function-name "$LAMBDA_FUNCTION_NAME" \
              --runtime python3.9 \
              --role "$LAMBDA_ROLE_ARN" \
              --handler app.lambda_handler \
              --zip-file fileb://lambda_package.zip \
              --environment Variables="{VERIFY_TOKEN=\"$VERIFY_TOKEN\",PAGE_ACCESS_TOKEN=\"$PAGE_ACCESS_TOKEN\"}" \
              --timeout 15 \
              --memory-size 128
          fi

      # Step 8: Cleanup (Optional)
      - name: Cleanup
        run: rm -f lambda_package.zip
